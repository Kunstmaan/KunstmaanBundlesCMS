<?php

namespace Kunstmaan\NodeBundle\Repository;

use Kunstmaan\NodeBundle\Entity\NodeTranslation;

/**
 * NodeTranslationLockRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NodeTranslationLockRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Check if there is a nodetranslation lock that's not passed the 30 minute threshold.
     *
     * @param NodeTranslation $nodeTranslation
     * @return mixed
     */
    public function getLockForNodeTranslation(NodeTranslation $nodeTranslation, $threshold)
    {
        $qb = $this->createQueryBuilder('ntl')
            ->select('ntl')
            ->where('ntl.nodeTranslation = :nt')
            ->andWhere('ntl.createdAt > :date')
            ->setParameter('nt', $nodeTranslation)
            ->setParameter('date', new \DateTime(sprintf('-%s seconds', $threshold)));

        return $qb->getQuery()->getOneOrNullResult();
    }

    /**
     * Get locks that are passed the threshold.
     *
     * @return mixed
     */
    public function getAllPassedLocks($threshold)
    {
        $qb = $this->createQueryBuilder('ntl')
            ->select('ntl')
            ->andWhere('ntl.createdAt < :date')
            ->setParameter('date', new \DateTime(sprintf('-%s seconds', $threshold)));

        return $qb->getQuery()->getResult();
    }
}
