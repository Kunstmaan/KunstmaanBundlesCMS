<?php

namespace Kunstmaan\PagePartBundle\Tests\Entity;

use Kunstmaan\PagePartBundle\Entity\HeaderPagePart;
use Symfony\Component\Validator\Constraints\NotBlank;
use Symfony\Component\Validator\Mapping\ClassMetadata;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-08-30 at 17:54:19.
 */
class HeaderPagePartTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var HeaderPagePart
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new HeaderPagePart();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Kunstmaan\PagePartBundle\Entity\HeaderPagePart::loadValidatorMetadata
     */
    public function testLoadValidatorMetadata()
    {
        $metadata = new ClassMetadata(HeaderPagePart::class);

        HeaderPagePart::loadValidatorMetadata($metadata);
        $this->assertArrayHasKey('niv', $metadata->properties);
        $this->assertInstanceOf(NotBlank::class, $metadata->properties['niv']->getConstraints()[0]);
        $this->assertArrayHasKey('title', $metadata->properties);
        $this->assertInstanceOf(NotBlank::class, $metadata->properties['title']->getConstraints()[0]);
    }

    /**
     * @covers Kunstmaan\PagePartBundle\Entity\HeaderPagePart::setNiv
     * @covers Kunstmaan\PagePartBundle\Entity\HeaderPagePart::getNiv
     */
    public function testSetGetNiv()
    {
        $this->object->setNiv(5);
        $this->assertEquals(5, $this->object->getNiv());
    }

    /**
     * @covers Kunstmaan\PagePartBundle\Entity\HeaderPagePart::setTitle
     * @covers Kunstmaan\PagePartBundle\Entity\HeaderPagePart::getTitle
     */
    public function testSetGetTitle()
    {
        $this->object->setTitle('A test title');
        $this->assertEquals('A test title', $this->object->getTitle());
    }

    /**
     * @covers Kunstmaan\PagePartBundle\Entity\HeaderPagePart::__toString
     */
    public function testToString()
    {
        $this->object->setTitle('A test title');
        $this->assertEquals('HeaderPagePart A test title', $this->object->__toString());
    }

    /**
     * @covers Kunstmaan\PagePartBundle\Entity\HeaderPagePart::getDefaultView
     */
    public function testGetDefaultView()
    {
        $this->assertEquals('KunstmaanPagePartBundle:HeaderPagePart:view.html.twig', $this->object->getDefaultView());
    }

    /**
     * @covers Kunstmaan\PagePartBundle\Entity\HeaderPagePart::getDefaultAdminType
     */
    public function testGetDefaultAdminType()
    {
        $this->assertEquals('Kunstmaan\PagePartBundle\Form\HeaderPagePartAdminType', $this->object->getDefaultAdminType());
    }
}
