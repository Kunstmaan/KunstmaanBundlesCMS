parameters:
    kunstmaan_media.media_manager.class: 'Kunstmaan\MediaBundle\Helper\MediaManager'
    kunstmaan_media.listener.doctrine.class: 'Kunstmaan\MediaBundle\EventListener\DoctrineMediaListener'
    kunstmaan_media.form.type.media.class: 'Kunstmaan\MediaBundle\Form\Type\MediaType'
    kunstmaan_media.form.type.iconfont.class: 'Kunstmaan\MediaBundle\Form\Type\IconFontType'
    kunstmaan_media.folder_manager.class: 'Kunstmaan\MediaBundle\Helper\FolderManager'
    kunstmaan_media.menu.adaptor.class: 'Kunstmaan\MediaBundle\Helper\Menu\MediaMenuAdaptor'
    kunstmaan_media.icon_font_manager.class: 'Kunstmaan\MediaBundle\Helper\IconFont\IconFontManager'
    kunstmaan_media.icon_font.default_loader.class: 'Kunstmaan\MediaBundle\Helper\IconFont\DefaultIconFontLoader'
    kunstmaan_media.media_creator_service.class: 'Kunstmaan\MediaBundle\Helper\Services\MediaCreatorService'
    kunstmaan_media.mimetype_guesser.factory.class: 'Kunstmaan\MediaBundle\Helper\MimeTypeGuesserFactory'
    kunstmaan_media.extension_guesser.factory.class: 'Kunstmaan\MediaBundle\Helper\ExtensionGuesserFactory'
    kunstmaan_media.validator.has_guessable_extension.class: 'Kunstmaan\MediaBundle\Validator\Constraints\HasGuessableExtensionValidator'

services:
    Kunstmaan\MediaBundle\Helper\MediaManager:
        calls:
            - [ setDefaultHandler, [ '@kunstmaan_media.media_handlers.file' ] ]

    Kunstmaan\MediaBundle\EventListener\DoctrineMediaListener:
        arguments:
            - '@Kunstmaan\MediaBundle\Helper\MediaManager'
        tags:
            - { name: 'doctrine.event_listener', event: 'prePersist' }
            - { name: 'doctrine.event_listener', event: 'preUpdate' }
            - { name: 'doctrine.event_listener', event: 'postPersist' }
            - { name: 'doctrine.event_listener', event: 'postUpdate' }
            - { name: 'doctrine.event_listener', event: 'preRemove' }

    Kunstmaan\MediaBundle\Form\Type\MediaType:
        arguments:
            - '@Kunstmaan\MediaBundle\Helper\MediaManager'
            - '@Doctrine\ORM\EntityManagerInterface'
        tags:
            - { name: form.type}

    Kunstmaan\MediaBundle\Form\Type\IconFontType:
        arguments:
            - '@Kunstmaan\MediaBundle\Helper\IconFont\IconFontManager'
        tags:
            - { name: form.type }

    Kunstmaan\MediaBundle\Helper\IconFont\IconFontManager:
        calls:
            - [ setDefaultLoader, [ '@kunstmaan_media.icon_font.default_loader' ] ]

    Kunstmaan\MediaBundle\Helper\IconFont\DefaultIconFontLoader:
        arguments:
            - '@kernel'
        tags:
            -  { name: 'kunstmaan_media.icon_font.loader' }

    Kunstmaan\MediaBundle\Helper\Services\MediaCreatorService:
        arguments:
            - '@Symfony\Component\DependencyInjection\ContainerInterface'

    Kunstmaan\MediaBundle\Repository\FolderRepository:
        factory: ['@Doctrine\ORM\EntityManagerInterface', getRepository]
        arguments:
            - 'KunstmaanMediaBundle:Folder'

    Kunstmaan\MediaBundle\Helper\Menu\MediaMenuAdaptor:
        arguments:
            - '@Kunstmaan\MediaBundle\Repository\FolderRepository'
        tags:
            -  { name: 'kunstmaan_admin.menu.adaptor' }

    Kunstmaan\MediaBundle\Helper\FolderManager:
        arguments:
            - '@Kunstmaan\MediaBundle\Repository\FolderRepository'

    Kunstmaan\MediaBundle\Helper\MimeTypeGuesserFactory: ~

    Kunstmaan\MediaBundle\Helper\ExtensionGuesserFactory: ~

    Kunstmaan\MediaBundle\Command\RebuildFolderTreeCommand:
        calls:
            - [setContainer, ['@service_container'] ]

    Kunstmaan\MediaBundle\Command\CleanDeletedMediaCommand:
        calls:
            - [setContainer, ['@service_container'] ]

    kunstmaan_media.filesystem_adapter:
        class: Gaufrette\Adapter\Local
        arguments:
            - '%kernel.root_dir%/../web%kunstmaan_media.media_path%'
            - true

    kunstmaan_media.filesystem:
        class: Gaufrette\Filesystem
        arguments:
            - '@kunstmaan_media.filesystem_adapter'

    Kunstmaan\MediaBundle\Validator\Constraints\HasGuessableExtensionValidator:
        tags:
            - { name: validator.constraint_validator, alias: has_guessable_extension }
        calls:
            - [setMimeTypeGuesser, ['@kunstmaan_media.mimetype_guesser.factory']]
            - [setExtensionGuesser, ['@kunstmaan_media.extension_guesser.factory']]
