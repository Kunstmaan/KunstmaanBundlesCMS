{% set extraparams = extraparams|merge(filter.currentparameters) %}

{% include 'KunstmaanAdminListBundle:AdminListTwigExtension:filters.html.twig' %}

{% if adminlist.pagerfanta.haveToPaginate() %}
    {{ pagerfanta(adminlist.pagerfanta, 'twitter_bootstrap') }}
{% endif %}

{% if adminlist.hasBulkActions %}
    <form action="#" method="POST" name="bulkform">
{% endif %}

<!-- Check for actions -->
{% set itemActionsPossible = false %}
{% for item in adminlist.items(extraparams) %}
    {% if (adminlist.canEdit(item) or adminlist.canDelete(item) or adminlist.hasItemActions() ) %}
        {% set itemActionsPossible = true %}
    {% endif %}
{% endfor %}

<table class="table table-striped table-bordered{% if adminlist.hasSort() %} table--sortable{% endif %}{% if not itemActionsPossible %} table--no-actions{% endif %}">
    <thead>
        <tr>
            <!-- Bulk -->
            {% if adminlist.hasBulkActions %}
                <th>
                    <input type="checkbox" id="js-all-bulk-checkbox">
                </th>
            {% endif %}

            <!-- Columns -->
            {% for column in adminlist.columns%}
                {% set columnName = column.name %}
                {% set columnkey = column.header %}
                {% set orderDirection = "DESC" %}
                {% set extraHeaderClass = "" %}
                {% if ( columnName == adminlist.orderBy )%}
                    {% if adminlist.orderDirection == "DESC" %}
                        {% set orderDirection = "ASC" %}
                        {% set extraHeaderClass = "table--sortable__th--down" %}
                    {% else %}
                        {% set extraHeaderClass = "table--sortable__th--up" %}
                    {% endif %}
                {% endif %}
                <th {% if adminlist.hasSort(columnName) %}class="js-sortable-link table--sortable__th {{extraHeaderClass}}" data-order-url="{{ path(basepath, extraparams|merge({ 'orderBy': columnName, "orderDirection": orderDirection }))}}"{% endif %}>
                    {{ columnkey | trans }}
                </th>
            {% endfor %}

            <!-- Actions -->
            <th class="table__actions">
                {{ 'form.actions'|trans }}
            </th>
        </tr>
    </thead>

    <tbody>
    {% for item in adminlist.items(extraparams) %}
        <tr>
            <!-- Bulk -->
            {% if adminlist.hasBulkActions %}
                <td>
                    <input type="checkbox" name="bulk_selection[]" value="{{ item.id }}" class="js-bulk-checkbox">
                </td>
            {% endif %}

            <!-- Columns -->
            {% for column in adminlist.columns%}
                {% set columnName = column.name %}
                {% set template = column.template %}
                {% if template is not null %}
                    <td>
                        {% include template with {'row': item, 'columnName': columnName, 'object': adminlist.getValue(item, columnName), 'adminlist': adminlist} %}
                    </td>
                {% else %}
                    <td>
                        {{adminlist.getStringValue(item, columnName)}}
                    </td>
                {% endif %}
            {% endfor %}

            <!-- Actions -->
            <td class="table__actions">
                {% if adminlist.canEdit(item) %}
                    <a href="{{ path(adminlist.getEditUrlFor(item)["path"], adminlist.getEditUrlFor(item)[("params")] ) }}" class="link--text table__actions__item">
                        <i class="fa fa-pencil-square-o"></i>
                        Edit
                    </a>
                {% endif %}

                {% if adminlist.canDelete(item) %}
                    {% include 'KunstmaanAdminListBundle:AdminListTwigExtension:sure-modal.html.twig' %}
                    <a href="#" data-toggle="modal" data-target="#sure-modal-{{ item.id }}" class="link--text link--danger table__actions__item">
                        <i class="fa fa-trash-o"></i>
                        Delete
                    </a>
                {% endif %}

                {% if adminlist.hasItemActions() %}
                    {% for itemAction in adminlist.getItemActions() %}
                        {% if itemAction.template is not null %}
                            {% include itemAction.template with {'row': item, 'item': item, 'action': itemAction} %}
                        {% else %}
                            <a href="{{ path(itemAction.getUrlFor(item)["path"], itemAction.getUrlFor(item)[("params")] ) }}" class="link--text table__actions__item">
                                {% if itemAction.getIconFor(item) is not null %}
                                    <i class="fa fa-{{ itemAction.getIconFor(item) }}"></i>
                                {% endif %}
                                {{ itemAction.getLabelFor(item) }}
                            </a>
                        {% endif %}
                    {% endfor %}
                {% endif %}
            </td>
        </tr>
    {% endfor %}
    </tbody>
</table>

{% if adminlist.hasBulkActions %}
        <div class="btn-group">
            {% for action in adminlist.getBulkActions() %}
                {% if action.template is not null %}
                    {% include action.template with {'action': action} %}
                {% else %}
                    <a href="#" onclick="return doBulkAction('{{ path(action.getUrl()["path"], action.getUrl()[("params")] ) }}')" class="btn disabled js-bulk-button">
                        {% if action.getIcon() is not null %}
                            <i class="fa fa-{{ action.getIcon() }} }}"></i>
                            {{ action.getLabel() }}
                        {% else %}
                            {{ action.getLabel() }}
                        {% endif %}
                    </a>
                {% endif %}
            {% endfor %}
        </div>

        <script>
            function doBulkAction(url) {
                document.bulkform.action = url;
                document.bulkform.submit();

                return false;
            }

            function validateBulkCheckboxes() {
                var allChecked = true;
                var oneChecked = false;

                var checkboxes = document.querySelectorAll('.js-bulk-checkbox');
                for (var i=0; i<checkboxes.length; i++) {
                    var cb = checkboxes[i];
                    if (cb.checked == true) {
                        oneChecked = true;
                    } else {
                        allChecked = false;
                    }
                }

                $('#js-all-bulk-checkbox').prop('checked', allChecked);

                if (oneChecked) {
                    $('.js-bulk-button').removeClass('disabled');
                } else {
                    $('.js-bulk-button').addClass('disabled');
                }
            }

            var allCheckbox = document.getElementById('js-all-bulk-checkbox');
            allCheckbox.onchange = function() {
                if (allCheckbox.checked == true) {
                    $('.js-bulk-checkbox').prop('checked', true);
                    $('.js-bulk-button').removeClass('disabled');
                } else {
                    $('.js-bulk-checkbox').prop('checked', false);
                    $('.js-bulk-button').addClass('disabled');
                }
            };

            var checkboxes = document.querySelectorAll('.js-bulk-checkbox');
            for (var key in checkboxes) {
                checkboxes[key].onchange = validateBulkCheckboxes;
            }
        </script>

    </form>
{% endif %}

{% if adminlist.pagerfanta.haveToPaginate() %}
    {{ pagerfanta(adminlist.pagerfanta, 'twitter_bootstrap') }}
{% endif %}
